service: hobbies-app-ffe
provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-central-1
  memorySize: 128

functions:
  getUsers:
    handler: handlers/UserHandler/GetUsers.getUsers
    events:
      - http:
          path: user
          method: get
          cors: true

  getUserById:
    handler: handlers/UserHandler/GetOneUser.getUserById
    events:
      - http:
          path: user/{id}
          method: get
          cors: true

  postUser:
    handler: handlers/handlerTest.postUser
    events:
      - http:
          path: post/user
          method: post
          cors: true

  updateUser:
    handler: handlers/UserHandler/UpdateUser.updateUser
    events:
      - http:
          path: user/put/{id}
          method: patch
          cors: true    

  deleteUser:
    handler: handlers/UserHandler/DeleteUser.deleteUser
    events:
      - http:
          path: user/delete/{id}
          method: delete
          cors: true    

  postPostAtUser:
    handler: handlers/PostHandler/CreatePostAtUser.postPostAtUser
    events:
      - http:
          path: post/user/{id}
          method: post
          cors: true

  getPostsByUserId:
    handler: handlers/PostHandler/GetPostByUserId.getPostsByUserId
    events:
      - http:
          path: posts/user/{id}
          method: get
          cors: true

  getOnePost:
    handler: handlers/PostHandler/GetOnePost.getOnePost
    events:
      - http:
          path: post/{id}
          method: get
          cors: true

  getAllPosts:
    handler: handlers/PostHandler/GetAllPosts.getAllPosts
    events:
      - http:
          path: allposts
          method: get
          cors: true

  getPostsByTag:
    handler: handlers/PostHandler/GetPostsByTag.getPostsByTag
    events:
      - http:
          path: bytag
          method: get
          cors: true

  updatePost:
    handler: handlers/PostHandler/UpdatePost.updatePost
    events:
      - http:
          path: post/put/{id}
          method: patch
          cors: true

  deletePost:
    handler: handlers/PostHandler/DeletePost.deletePost
    events:
      - http:
          path: post/delete/{id}
          method: delete
          cors: true

  postCommentAtPost:
    handler: handlers/CommentsHandler/PostCommentAtPost.postCommentAtPost
    events:
      - http:
          path: comment/post/{id}
          method: post
          cors: true   

  getCommentsAtPost:
    handler: handlers/CommentsHandler/GetCommentsAtPost.getCommentsAtPost
    events:
      - http:
          path: comments/post/{id}
          method: get
          cors: true

  getOneComment:
    handler: handlers/CommentsHandler/GetOneComment.getOneComment
    events:
      - http:
          path: comment/{id}
          method: get
          cors: true

  updateComment:
    handler: handlers/CommentsHandler/UpdateComment.updateComment
    events:
      - http:
          path: comment/put/{id}
          method: patch
          cors: true

  deleteComment:
    handler: handlers/CommentsHandler/DeleteComment.deleteComment
    events:
      - http:
          path: comment/delete/{id}
          method: delete
          cors: true

  getCommentsByUserId:
    handler: handlers/CommentsHandler/GetCommentsByUserId.getCommentsByUserId
    events:
      - http:
          path: comments/user/{id}
          method: get
          cors: true

  postLikeAtPost:
    handler: handlers/handlerTest.postLikeAtPost
    events:
      - http:
          path: like/post/{id}
          method: post
          cors: true

  postLikeAtComment:
    handler: handlers/handlerTest.postLikeAtComment
    events:
      - http:
          path: like/comment/{id}
          method: post
          cors: true

  getAllUserFollowers:
    handler: handlers/FollowHandler/GetAllUserFollowers.getAllUserFollowers
    events:
      - http:
          path: follow/user/{id}
          method: get
          cors: true

  postFollowerAtUser:
    handler: handlers/FollowHandler/PostFollowerAtUser.postFollowerAtUser
    events:
      - http:
          path: follow/user/{id}
          method: post
          cors: true
          
  premiumPlan:
    handler: handlers/PaymentHandler/PremiumPlan.premiumPlan
    events:
      - http:
          path: payment/premium
          method: get
          cors: true

  addLocations:
    handler: handlers/PredefinedHandler/AddLocations.addLocations
    events:
      - http:
          path: addlocations
          method: post
          cors: true

  addSports:
    handler: handlers/PredefinedHandler/AddSports.addSports
    events:
      - http:
          path: addsports
          method: post
          cors: true

  getLocations:
    handler: handlers/LocationHandler/GetLocations.getLocations
    events:
      - http:
          path: locations
          method: get
          cors: true

  getOneLocation:
    handler: handlers/LocationHandler/GetOneLocation.getOneLocation
    events:
      - http:
          path: locations/{id}
          method: get
          cors: true

  deleteLocation:
    handler: handlers/LocationHandler/DeleteLocation.deleteLocation
    events:
      - http:
          path: locations/{id}
          method: delete
          cors: true

  getSports:
    handler: handlers/SportsHandler/GetSports.getSports
    events:
      - http:
          path: sports
          method: get
          cors: true

  getOneSport:
    handler: handlers/SportsHandler/GetOneSport.getOneSport
    events:
      - http:
          path: sports/{id}
          method: get
          cors: true

  deleteSport:
    handler: handlers/SportsHandler/DeleteSport.deleteSport
    events:
      - http:
          path: sports/{id}
          method: delete
          cors: true 
plugins:
  - serverless-offline
