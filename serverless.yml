service: hobbies-app
provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-central-1
  memorySize: 128

functions:
  getUsers:
    handler: handlers/handlerTest.getUsers
    events:
      - http:
          path: user
          method: get
          cors: true

  getUserById:
    handler: handlers/handlerTest.getUserById
    events:
      - http:
          path: user/{id}
          method: get
          cors: true

  postUser:
    handler: handlers/handlerTest.postUser
    events:
      - http:
          path: user
          method: post
          cors: true

  updateUser:
    handler: handlers/handlerTest.updateUser
    events:
      - http:
          path: user/put/{id}
          method: put
          cors: true    

  deleteUser:
    handler: handlers/handlerTest.deleteUser
    events:
      - http:
          path: user/delete/{id}
          method: delete
          cors: true    

  postPostAtUser:
    handler: handlers/PostHandler/CreatePostAtUser.postPostAtUser
    events:
      - http:
          path: post/user/{id}
          method: post
          cors: true

  getPostsByUserId:
    handler: handlers/PostHandler/GetPostByUserId.getPostsByUserId
    events:
      - http:
          path: posts/user/{id}
          method: get
          cors: true

  getOnePost:
    handler: handlers/PostHandler/GetOnePost.getOnePost
    events:
      - http:
          path: post/{id}
          method: get
          cors: true

  updatePost:
    handler: handlers/PostHandler/UpdatePost.updatePost
    events:
      - http:
          path: post/put/{id}
          method: put
          cors: true

  deletePost:
    handler: handlers/PostHandler/DeletePost.deletePost
    events:
      - http:
          path: post/delete/{id}
          method: delete
          cors: true

  postCommentAtPost:
    handler: handlers/handlerTest.postCommentAtPost
    events:
      - http:
          path: comment/post/{id}
          method: post
          cors: true   

  getCommentsAtPost:
    handler: handlers/handlerTest.getCommentsAtPost
    events:
      - http:
          path: comments/post/{id}
          method: get
          cors: true

  getOneComment:
    handler: handlers/handlerTest.getOneComment
    events:
      - http:
          path: comment/{id}
          method: get
          cors: true

  updateComment:
    handler: handlers/handlerTest.updateComment
    events:
      - http:
          path: comment/put/{id}
          method: put
          cors: true

  deleteComment:
    handler: handlers/handlerTest.deleteComment
    events:
      - http:
          path: comment/delete/{id}
          method: delete
          cors: true

  getCommentsByUserId:
    handler: handlers/handlerTest.getCommentsByUserId
    events:
      - http:
          path: comments/user/{id}
          method: get
          cors: true

  postLikeAtPost:
    handler: handlers/handlerTest.postLikeAtPost
    events:
      - http:
          path: like/post/{id}
          method: post
          cors: true

  postLikeAtComment:
    handler: handlers/handlerTest.postLikeAtComment
    events:
      - http:
          path: like/comment/{id}
          method: post
          cors: true

plugins:
  - serverless-offline
